---
import { getCollection } from "astro:content"
import Layout from "../../layouts/Layout.astro"
import { TinaMarkdown } from "tinacms/dist/rich-text"
import { formatArtistName } from "../../lib/artists-helper"

export async function getStaticPaths() {
  const artists = await getCollection("artist")

  return artists.map((artist) => ({
    params: { slug: artist.id },
    props: { artist },
  }))
}

const { artist } = Astro.props
const artistName = formatArtistName({
  firstName: artist.data.firstName ?? undefined,
  lastName: artist.data.lastName,
} as any)
const body = artist.data.body
---

<Layout title={`${artistName} - Espace 29`}>
  <main class="container mx-auto px-4 py-12">
    <div class="mx-auto max-w-4xl">
      <a
        href="/artistes"
        class="mb-8 inline-block text-gray-600 transition-colors hover:text-gray-900"
      >
        ‚Üê Retour aux artistes
      </a>

      <article class="space-y-8">
        <header class="space-y-4">
          <h1 class="text-4xl font-bold">{artistName}</h1>
          <p class="text-xl text-gray-600">{artist.data.title}</p>
          {
            artist.data.email && (
              <p class="text-gray-600">
                <a href={`mailto:${artist.data.email}`} class="hover:underline">
                  {artist.data.email}
                </a>
              </p>
            )
          }
          {
            artist.data.websiteUrl && (
              <p class="text-gray-600">
                <a
                  href={artist.data.websiteUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="hover:underline"
                >
                  {artist.data.websiteUrl}
                </a>
              </p>
            )
          }
        </header>

        {
          artist.data.profileDescription && (
            <div class="prose prose-lg max-w-none">
              <p class="whitespace-pre-line">{artist.data.profileDescription}</p>
            </div>
          )
        }

        {
          artist.data.profileImageUrlList &&
            artist.data.profileImageUrlList.length > 0 && (
              <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                {artist.data.profileImageUrlList.map((image) => (
                  <div class="overflow-hidden rounded-lg">
                    <img
                      src={image.imageUrl}
                      alt={image.alt}
                      class="h-auto w-full object-cover"
                    />
                  </div>
                ))}
              </div>
            )
        }

        {
          body && (
            <div class="prose prose-lg max-w-none">
              <TinaMarkdown content={body} client:load />
            </div>
          )
        }
      </article>
    </div>
  </main>
</Layout>
