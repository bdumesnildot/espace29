---
import Layout from "@layouts/Layout.astro"
import PageTopLayout from "@layouts/PageTopLayout.astro"
import { getCollection } from "astro:content"
import { formatArtistName } from "@lib/artists-helper"
import client from "../../../tina/__generated__/client"
import { ArtistContent } from "../../../tina/components/ArtistContent"

export async function getStaticPaths() {
  const artistCollection = await getCollection("artist")

  return artistCollection.map((artist) => ({
    params: { slug: artist.id },
    props: {
      artist,
      getTinaProps: async () =>
        client.queries.artist({
          relativePath: artist.data.tinaInfo.relativePath,
        }),
    },
  }))
}

const { artist, getTinaProps } = Astro.props
const tinaProps = await getTinaProps()

if (!artist) {
  return Astro.redirect("/404")
}
---

<Layout title={`e29 | ${formatArtistName(artist.data)}`}>
  <main class="flex min-h-full w-full flex-col items-start">
    <PageTopLayout
      title={formatArtistName(artist.data)}
      backTo={{
        href: "/artistes",
        label: "Retour au artistes",
      }}
    />

    <div id={`artist-${artist.data.tinaInfo.filename}-details-section`}>
      <ArtistContent artist={artist.data} />
    </div>

    <!-- Spacer div to prevent footer from moving up during pin (desktop only) -->
    <div id="pin-spacer" class="hidden h-0 sm:block"></div>
  </main>
</Layout>

<script>
  import { gsap } from "gsap"
  import { ScrollTrigger } from "gsap/ScrollTrigger"

  document.addEventListener("DOMContentLoaded", function () {
    // Magnet scroll effect (desktop only)
    if (window.innerWidth >= 640) {
      // sm breakpoint
      gsap.registerPlugin(ScrollTrigger)

      const artistSlug = window.location.pathname.split("/").pop()
      if (!artistSlug) return

      const section = document.getElementById(
        `artist-${artistSlug}-details-section`
      )
      const pinSpacer = document.getElementById("pin-spacer")
      if (!section || !pinSpacer) return

      const RELEASE_OFFSET = 300

      // Set the pin-spacer height to match the pin duration
      pinSpacer.style.height = `${RELEASE_OFFSET}px`

      ScrollTrigger.create({
        trigger: section,
        start: "top top",
        end: `+=${RELEASE_OFFSET}`,
        pin: true,
        scrub: 0.5,
        invalidateOnRefresh: true,
        onRefresh: () => {
          // Ensure pin-spacer height is recalculated on window resize
          pinSpacer.style.height = `${RELEASE_OFFSET}px`
        },
      })
    }
  })
</script>
